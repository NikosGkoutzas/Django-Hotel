# Generated by Django 5.2.4 on 2025-08-22 12:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(help_text='Rooms with room number greater than 1', unique=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Room number')),
                ('type', models.CharField(choices=[('Single', 'Single'), ('Double', 'Double'), ('Suite', 'Suite'), ('Studio', 'Studio'), ('Deluxe room', 'Deluxe room'), ('Villa', 'Villa'), ('Family room', 'Family room')], max_length=20, verbose_name='Room type')),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('price_per_night', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price/night ($)')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('country_code', models.CharField(choices=[('+30', 'Greece (+30)'), ('+44', 'United Kingdom (+44)'), ('+49', 'Germany (+49)'), ('+33', 'France (+33)'), ('+39', 'Italy (+39)'), ('+34', 'Spain (+34)'), ('+358', 'Finland (+358)'), ('+31', 'Netherlands (+31)'), ('+46', 'Sweden (+46)'), ('+41', 'Switzerland (+41)'), ('+43', 'Austria (+43)'), ('+351', 'Portugal (+351)'), ('+420', 'Czech Republic (+420)'), ('+32', 'Belgium (+32)'), ('+370', 'Lithuania (+370)'), ('+372', 'Estonia (+372)'), ('+371', 'Latvia (+371)'), ('+48', 'Poland (+48)'), ('+386', 'Slovenia (+386)'), ('+385', 'Croatia (+385)')], default='+30', max_length=5)),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number (6-15 digits).', regex='^\\d{6,15}$')])),
                ('age', models.PositiveIntegerField(default=18, validators=[django.core.validators.MinValueValidator(18)])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(verbose_name='First name')),
                ('last_name', models.CharField(verbose_name='Last name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'unique_together': {('country_code', 'phone_number')},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in', models.DateField(verbose_name='Check-in Date')),
                ('check_out', models.DateField(verbose_name='Check-out Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('people', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='Number of people')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='hotelApp.room')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed'), ('Failed', 'Failed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=20)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='hotelApp.booking')),
            ],
        ),
    ]
